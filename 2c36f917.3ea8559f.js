(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{113:function(e,i,n){"use strict";n.d(i,"a",(function(){return l})),n.d(i,"b",(function(){return m}));var t=n(0),r=n.n(t);function o(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function a(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?a(Object(n),!0).forEach((function(i){o(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function c(e,i){if(null==e)return{};var n,t,r=function(e,i){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],i.indexOf(n)>=0||(r[n]=e[n]);return r}(e,i);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),d=function(e){var i=r.a.useContext(p),n=i;return e&&(n="function"==typeof e?e(i):s(s({},i),e)),n},l=function(e){var i=d(e.components);return r.a.createElement(p.Provider,{value:i},e.children)},u={inlineCode:"code",wrapper:function(e){var i=e.children;return r.a.createElement(r.a.Fragment,{},i)}},b=r.a.forwardRef((function(e,i){var n=e.components,t=e.mdxType,o=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=d(n),b=t,m=l["".concat(a,".").concat(b)]||l[b]||u[b]||o;return n?r.a.createElement(m,s(s({ref:i},p),{},{components:n})):r.a.createElement(m,s({ref:i},p))}));function m(e,i){var n=arguments,t=i&&i.mdxType;if("string"==typeof e||t){var o=n.length,a=new Array(o);a[0]=b;var s={};for(var c in i)hasOwnProperty.call(i,c)&&(s[c]=i[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},83:function(e,i,n){"use strict";n.r(i),n.d(i,"frontMatter",(function(){return s})),n.d(i,"metadata",(function(){return c})),n.d(i,"toc",(function(){return p})),n.d(i,"default",(function(){return l}));var t=n(3),r=n(7),o=(n(0),n(113)),a=["components"],s={title:"Authorization"},c={unversionedId:"api/authorizations",id:"api/authorizations",isDocsHomePage:!1,title:"Authorization",description:"A package providing a base authorizations class to help check which permissions a user has.",source:"@site/docs/api/authorizations.md",slug:"/api/authorizations",permalink:"/sdk-js/api/authorizations",editUrl:"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/api/authorizations.md",version:"current",sidebar:"someSidebar",previous:{title:"Users",permalink:"/sdk-js/api/definitions/users"},next:{title:"Downloads",permalink:"/sdk-js/api/downloads"}},p=[{value:"Installation",id:"installation",children:[{value:"NPM",id:"npm",children:[]},{value:"Yarn",id:"yarn",children:[]}]},{value:"Usage",id:"usage",children:[]},{value:"Methods",id:"methods",children:[{value:"<code>isAuthorized(permissionId, region)</code>",id:"isauthorizedpermissionid-region",children:[]},{value:"<code>isAnyAuthorized(permissionIds, region)</code>",id:"isanyauthorizedpermissionids-region",children:[]},{value:"<code>getPermission(permissionId, region)</code>",id:"getpermissionpermissionid-region",children:[]},{value:"<code>getPermissions(permissionIds, region)</code>",id:"getpermissionspermissionids-region",children:[]},{value:"<code>getOrganizations(permissionId, region)</code>",id:"getorganizationspermissionid-region",children:[]},{value:"<code>getPayers(permissionId, organizationId, region)</code>",id:"getpayerspermissionid-organizationid-region",children:[]}]}],d={toc:p};function l(e){var i=e.components,n=Object(r.a)(e,a);return Object(o.b)("wrapper",Object(t.a)({},d,n,{components:i,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A package providing a base authorizations class to help check which permissions a user has."),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@availity/authorizations-core"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@availity/authorizations-core.svg?style=for-the-badge",alt:"Version"}))),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("h3",{id:"npm"},"NPM"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"npm install @availity/authorizations-axios @availity/api-axios\n")),Object(o.b)("h3",{id:"yarn"},"Yarn"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @availity/authorizations-axios @availity/api-axios\n")),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"AvAuthorizations")," uses ",Object(o.b)("inlineCode",{parentName:"p"},"AvPermissionsApi")," and ",Object(o.b)("inlineCode",{parentName:"p"},"AvRegionsApi")," which can be found in ",Object(o.b)("a",{parentName:"p",href:"/api/axios-resources/"},"@availity/api-axios"),". You do not need to provide these yourself."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import AvAuthorizations from '@availity/authorizations-axios';\n\nconst authApi = new AvAuthorizations();\n")),Object(o.b)("h2",{id:"methods"},"Methods"),Object(o.b)("p",null,"For all methods, if no region is passed in, defaults to current region."),Object(o.b)("h3",{id:"isauthorizedpermissionid-region"},Object(o.b)("inlineCode",{parentName:"h3"},"isAuthorized(permissionId, region)")),Object(o.b)("p",null,"Returns true or false if the current user has access to the permission in the given region."),Object(o.b)("h3",{id:"isanyauthorizedpermissionids-region"},Object(o.b)("inlineCode",{parentName:"h3"},"isAnyAuthorized(permissionIds, region)")),Object(o.b)("p",null,"Returns true or false if the current user has access to any of the permissions in the given region."),Object(o.b)("h3",{id:"getpermissionpermissionid-region"},Object(o.b)("inlineCode",{parentName:"h3"},"getPermission(permissionId, region)")),Object(o.b)("p",null,"Returns the permission object for the given permissionId and region."),Object(o.b)("h3",{id:"getpermissionspermissionids-region"},Object(o.b)("inlineCode",{parentName:"h3"},"getPermissions(permissionIds, region)")),Object(o.b)("p",null,"Returns an array of permission objects for the permissionIds in the given region."),Object(o.b)("h3",{id:"getorganizationspermissionid-region"},Object(o.b)("inlineCode",{parentName:"h3"},"getOrganizations(permissionId, region)")),Object(o.b)("p",null,"Returns the organizations array for the permissionId. Will be empty if not authorized."),Object(o.b)("h3",{id:"getpayerspermissionid-organizationid-region"},Object(o.b)("inlineCode",{parentName:"h3"},"getPayers(permissionId, organizationId, region)")),Object(o.b)("p",null,"Check the permissionId for an organization with ",Object(o.b)("inlineCode",{parentName:"p"},"organizationId"),". Returns its ",Object(o.b)("inlineCode",{parentName:"p"},"resources")," or an empty array."))}l.isMDXComponent=!0}}]);