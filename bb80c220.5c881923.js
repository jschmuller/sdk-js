(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{104:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return c}));var n=a(3),r=a(7),i=(a(0),a(113)),l=["components"],b={title:"Yup Extensions"},s={unversionedId:"resources/yup",id:"resources/yup",isDocsHomePage:!1,title:"Yup Extensions",description:"Method extensions for the yup",source:"@site/docs/resources/yup.md",slug:"/resources/yup",permalink:"/sdk-js/resources/yup",editUrl:"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/resources/yup.md",version:"current",sidebar:"someSidebar",previous:{title:"Resolving Urls",permalink:"/sdk-js/resources/resolve-url"},next:{title:"Error Logging",permalink:"/sdk-js/resources/exceptions"}},o=[{value:"Installation",id:"installation",children:[{value:"NPM",id:"npm",children:[]},{value:"Yarn",id:"yarn",children:[]}]},{value:"Usage",id:"usage",children:[]},{value:"Methods",id:"methods",children:[{value:"isRequired",id:"isrequired",children:[]},{value:"npi",id:"npi",children:[]},{value:"phone",id:"phone",children:[]}]},{value:"Schema",id:"schema",children:[{value:"dateRange",id:"daterange",children:[]},{value:"avDate",id:"avdate",children:[]}]}],m={toc:o};function c(e){var t=e.components,a=Object(r.a)(e,l);return Object(i.b)("wrapper",Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Method extensions for the ",Object(i.b)("a",{parentName:"p",href:"https://github.com/jquense/yup"},"yup")),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@availity/yup"},Object(i.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@availity/yup.svg?style=for-the-badge",alt:"Version"}))),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("p",null,"This package includes ",Object(i.b)("inlineCode",{parentName:"p"},"yup")," as a dependency in version 4+. In version 3 and earlier you will need to provide ",Object(i.b)("inlineCode",{parentName:"p"},"yup")," version 0.29.3 or earlier."),Object(i.b)("p",null,"If you are upgrading ",Object(i.b)("inlineCode",{parentName:"p"},"@availity/yup")," to version 4 or 5, then we recommend checking out the breaking changes for ",Object(i.b)("inlineCode",{parentName:"p"},"yup")," that occur after version ",Object(i.b)("inlineCode",{parentName:"p"},"0.29.0"),". For example, the way arrays are required has been ",Object(i.b)("a",{parentName:"p",href:"https://github.com/jquense/yup/blob/pre-v1/CHANGELOG.md#breaking-changes-1"},"changed"),"."),Object(i.b)("p",null,"If you need to use the ",Object(i.b)("inlineCode",{parentName:"p"},"avDate")," and ",Object(i.b)("inlineCode",{parentName:"p"},"dateRange")," schemas then you will have to add ",Object(i.b)("inlineCode",{parentName:"p"},"moment")," as a dependency."),Object(i.b)("h3",{id:"npm"},"NPM"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"npm install @availity/yup\n")),Object(i.b)("h3",{id:"yarn"},"Yarn"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @availity/yup\n")),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"There are two ways to use methods provided in this package. ",Object(i.b)("inlineCode",{parentName:"p"},"isRequired"),", ",Object(i.b)("inlineCode",{parentName:"p"},"npi"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"phone")," will all be added to existing ",Object(i.b)("inlineCode",{parentName:"p"},"yup")," schemas. On the other hand, ",Object(i.b)("inlineCode",{parentName:"p"},"date")," and ",Object(i.b)("inlineCode",{parentName:"p"},"dateRange")," must be imported from the package directly."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// This import will add our methods to the existing `yup` schema\nimport '@availity/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.string().isRequired(true, 'This field is required.');\n\nschema.isValid('12-12-2012');\n")),Object(i.b)("p",null,"If you want to utilize the custom date validators you need to import them directly"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// This import will also add the other methods (npi, phone, isRequired)\n// to the existing `yup` schema\nimport { avDate, dateRange } from '@availity/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  date: avDate(),\n  range: dateRange(),\n});\n\nschema.isValid({\n  date: '12-12-2012',\n  range: {\n    startDate: '12/11/2012',\n    endDate: '12/12/2012',\n  },\n});\n")),Object(i.b)("h2",{id:"methods"},"Methods"),Object(i.b)("p",null,"These methods are added to the existing ",Object(i.b)("inlineCode",{parentName:"p"},"yup")," schema"),Object(i.b)("h3",{id:"isrequired"},"isRequired"),Object(i.b)("p",null,"This method is added to the following schema"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"array"),Object(i.b)("li",{parentName:"ul"},"number"),Object(i.b)("li",{parentName:"ul"},"object"),Object(i.b)("li",{parentName:"ul"},"string")),Object(i.b)("h4",{id:"parameters"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"required")," - ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),". Optional. Whether or not the given string is required. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"true")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". Optional. Custom error message when invalid. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"This Field is Required."))),Object(i.b)("h4",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import '@availity/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  required: {\n    string: yup.string().isRequired(true, 'Custom Error Message'),\n    number: yup.number().isRequired(true, 'Custom Error Message'),\n    array: yup.array().isRequired(true, 'Custom Error Message'),\n    object: yup.object().isRequired(true, 'Custom Error Message'),\n  },\n  optional: {\n    string: yup.string().isRequired(false),\n    number: yup.number().isRequired(false),\n    array: yup.array().isRequired(false),\n    object: yup.object().isRequired(false),\n  },\n});\n")),Object(i.b)("h3",{id:"npi"},"npi"),Object(i.b)("p",null,"Validate an NPI (National Provider Identifier)"),Object(i.b)("p",null,"This method is added to the following schema"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"number"),Object(i.b)("li",{parentName:"ul"},"string")),Object(i.b)("h4",{id:"parameters-1"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". Optional. Custom error message when invalid. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"This field is invalid."))),Object(i.b)("h4",{id:"example-1"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import '@availity/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.string().npi();\n")),Object(i.b)("h3",{id:"phone"},"phone"),Object(i.b)("p",null,"Validate a phone number. Must be 10 digits without country code, can be formatted when using string schema."),Object(i.b)("p",null,"This method is added to the following schema"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"number"),Object(i.b)("li",{parentName:"ul"},"string")),Object(i.b)("h4",{id:"parameters-2"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". Optional. Custom error message when invalid. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"This field is invalid."))),Object(i.b)("h4",{id:"example-2"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import '@availity/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.string().phone();\n\nschema.isValid('(444) 444-4444'); // true\nschema.isValid('+1 (444) 444-4444'); // true\nschema.isValid('444-444-4444'); // true\nschema.isValid('+1 444-444-4444'); // true\nschema.isValid('444.444.4444'); // true\nschema.isValid('(444) 444 4444'); // true\n\nconst schema = yup.number().phone();\n\nschema.isValid('4444444444'); // true\nschema.isValid('444 444 4444'); // true\nschema.isValid('44444444445'); // false\nschema.isValid('+14444444444'); // false\n")),Object(i.b)("h2",{id:"schema"},"Schema"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"avDate")," and ",Object(i.b)("inlineCode",{parentName:"p"},"dateRange")," schema exported from this package are used as you would ",Object(i.b)("inlineCode",{parentName:"p"},"string")," or ",Object(i.b)("inlineCode",{parentName:"p"},"number")," from ",Object(i.b)("inlineCode",{parentName:"p"},"yup")," directly."),Object(i.b)("h3",{id:"daterange"},"dateRange"),Object(i.b)("p",null,"Validate a daterange object"),Object(i.b)("h4",{id:"parameters-3"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"options")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". optional. Range Options.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"format")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. The format to parse the dates with."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"startKey")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. The key for the start date. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"startDate")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"endKey")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. The key for the end date. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"endDate"))))),Object(i.b)("h4",{id:"example-3"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange();\n\nschema.isValid({\n  startDate: '12/11/2012',\n  endDate: '12/12/2012',\n});\n\n// Schema with custom keys\nconst customKeySchema = dateRange({\n  startKey: 'from',\n  endKey: 'to',\n});\n\ncustomKeySchema.isValid({\n  from: '12/11/2012',\n  to: '12/12/2012',\n});\n")),Object(i.b)("h4",{id:"methods-1"},"Methods"),Object(i.b)("h5",{id:"between"},"between"),Object(i.b)("p",null,"Accepts range of dates the date range can fall between."),Object(i.b)("h5",{id:"parameters-4"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"minDate")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The minimum date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"maxDate")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The max date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date Range must be between XX/XX/XXXX and XX/XX/XXXX."')),Object(i.b)("h5",{id:"example-4"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange().between('12/01/2012', '12/10/2012');\n\nschema.isValid({\n  startDate: '12/02/2012',\n  endDate: '12/03/2012',\n});\n")),Object(i.b)("h5",{id:"min"},"min"),Object(i.b)("p",null,"Set the minimum date the given range must start on or after"),Object(i.b)("h6",{id:"parameters-5"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"min")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The minimum date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date Range must start after XX/XX/XXXX"')),Object(i.b)("h6",{id:"example-5"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange().min('12/01/2012');\n\nschema.isValid({\n  startDate: '12/02/2012',\n  endDate: '12/03/2012',\n});\n")),Object(i.b)("h5",{id:"max"},"max"),Object(i.b)("p",null,"Set the maximum date the given range must end on or before"),Object(i.b)("h6",{id:"parameters-6"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"max")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The max date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date Range must start before XX/XX/XXXX"')),Object(i.b)("h6",{id:"example-6"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange().max('12/10/2012');\n\nschema.isValid({\n  startDate: '12/02/2012',\n  endDate: '12/03/2012',\n});\n")),Object(i.b)("h5",{id:"distance"},"distance"),Object(i.b)("p",null,"Evaluates if date range is within a set distance"),Object(i.b)("h6",{id:"parameters-7"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"options")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". distance options.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"min")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". optional. The minimum distance between the date ranges",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"value")," - ",Object(i.b)("inlineCode",{parentName:"li"},"number"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". the value of the minimum distance"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"units")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. the weight of the value. default ",Object(i.b)("inlineCode",{parentName:"li"},"day")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"max")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". optional. The maximum distance between the date ranges",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"value")," - ",Object(i.b)("inlineCode",{parentName:"li"},"number"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". the value of the max distance"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"units")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. the weight of the value. default ",Object(i.b)("inlineCode",{parentName:"li"},"day")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"format")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. custom parse format for date validation")))),Object(i.b)("h6",{id:"example-7"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange().distance({\n  min: {\n    value: 3,\n    units: 'day',\n  },\n});\n\nschema.isValid({\n  startDate: '12/02/2012',\n  endDate: '12/03/2012',\n});\n")),Object(i.b)("h5",{id:"typeerror"},"typeError"),Object(i.b)("p",null,"Sets a custom error message for invalid date ranges to override the 'Start and End Date are required.' default when only one of the start or end date is falsy. Useful when combined with @availity/date Date Range react component that rejects invalid dates."),Object(i.b)("h6",{id:"parameters-8"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"options")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". typeError options.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. The custom error message to display")))),Object(i.b)("h6",{id:"example-8"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange();\n\nschema.isValid({\n  startDate: '',\n  endDate: '12/03/2012',\n}); // throws 'Start and End Date are required.'\n\nconst customErrSchema = dateRange().typeError({\n  message: 'Custom error message',\n});\n\ncustomErrSchema.isValid({\n  startDate: '',\n  endDate: '12/03/2012',\n}); // throws 'Custom error message'\n")),Object(i.b)("h3",{id:"avdate"},"avDate"),Object(i.b)("p",null,"Similar to the default date yup object and accepts a string or ",Object(i.b)("inlineCode",{parentName:"p"},"moment")," object instead. See ",Object(i.b)("a",{parentName:"p",href:"https://github.com/jquense/yup#date"},"Date")," for ",Object(i.b)("inlineCode",{parentName:"p"},"min")," and ",Object(i.b)("inlineCode",{parentName:"p"},"max")),Object(i.b)("h4",{id:"parameters-9"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"options")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". optional. Range Options.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"format")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string | string[]"),". optional. Add to the list of accepted formats."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"typeError")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. Specify the error message to show when the date is in an incorrect format")))),Object(i.b)("h4",{id:"methods-2"},"Methods"),Object(i.b)("h5",{id:"between-1"},"between"),Object(i.b)("p",null,"Set the min and max that the date must be inbetween"),Object(i.b)("h6",{id:"parameters-10"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"min")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The minimum allowed date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"max")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The maximum allowed date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date must be between ${min} and ${max}."'),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"inclusivity")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Set whether the min and max should be inclusive. Default: "()"')),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://momentjscom.readthedocs.io/en/latest/moment/05-query/06-is-between/"},"More information")," on inclusivity"),Object(i.b)("h6",{id:"example-9"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { avDate } from '@availity/yup';\n\nconst schema = avDate().between('12/01/2012', '12/10/2012');\n\nschema.isValid('12/02/2012');\n")),Object(i.b)("h5",{id:"min-1"},"min"),Object(i.b)("p",null,"Validate the date is on or after the given minimum"),Object(i.b)("h6",{id:"parameters-11"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"min")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The minimum date the given value must be on or after."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date must be ${min} or later."')),Object(i.b)("h6",{id:"example-10"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { avDate } from '@availity/yup';\n\nconst schema = avDate().min('12/01/2012');\n\nschema.isValid('12/02/2012');\n")),Object(i.b)("h5",{id:"max-1"},"max"),Object(i.b)("p",null,"Validate the date is on or before the given maximum"),Object(i.b)("h6",{id:"parameters-12"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"max")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The maximum date the given value must be on or before."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date must be ${max} or earlier."')),Object(i.b)("h6",{id:"example-11"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { avDate } from '@availity/yup';\n\nconst schema = avDate().max('12/01/2012');\n\nschema.isValid('11/30/2012');\n")),Object(i.b)("h5",{id:"isrequired-1"},"isRequired"),Object(i.b)("p",null,"Mark the date as required. You must use this method instead of the built-in ",Object(i.b)("inlineCode",{parentName:"p"},"required"),"."),Object(i.b)("h6",{id:"parameters-13"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"isRequired")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". Whether or not the value is required"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "This field is required."')),Object(i.b)("h6",{id:"example-12"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { avDate } from '@availity/yup';\n\nconst schema = avDate().isRequired();\n\nschema.isValid('11/30/2012');\n")))}c.isMDXComponent=!0},113:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),m=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},c=function(e){var t=m(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),c=m(a),u=n,d=c["".concat(l,".").concat(u)]||c[u]||p[u]||i;return a?r.a.createElement(d,b(b({ref:t},o),{},{components:a})):r.a.createElement(d,b({ref:t},o))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=u;var b={};for(var s in t)hasOwnProperty.call(t,s)&&(b[s]=t[s]);b.originalType=e,b.mdxType="string"==typeof e?e:n,l[1]=b;for(var o=2;o<i;o++)l[o]=a[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);